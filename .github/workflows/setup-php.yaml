name: Docker Build

on:
  workflow_call:
    outputs:
      tar:
        value: ${{ jobs.docker-build.outputs.tar }}
      key:
        value: ${{ jobs.docker-build.outputs.key }}
      path:
        value: ${{ jobs.docker-build.outputs.path }}

jobs:
  docker-build:
    name: Docker Build

    runs-on: ubuntu-latest

    outputs:
      tar: ${{ steps.image-tag.outputs.TAR }}
      key: ${{ steps.image-tag.outputs.KEY }}
      path: ${{ steps.image-tag.outputs.CACHE_PATH }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Image Tag
        id: image-tag
        run: |
          PHP_IMAGE=$(make php-image)
          PHP_TAG=$(make php-tag)
          CACHE_PATH="/tmp/docker_cache"
          LOCK_HASH="${{ hashFiles('./src/composer.lock') }}"
          DOCKERFILE_HASH="${{ hashFiles('./docker/php/Dockerfile.ci') }}"
          KEY="${DOCKERFILE_HASH}${LOCK_HASH}"
          IMAGE="${PHP_IMAGE}:${PHP_TAG}"
          TAR="${CACHE_PATH}/${IMAGE}"
          echo "CACHE_PATH=${CACHE_PATH}" >> $GITHUB_OUTPUT
          echo "LOCK_HASH=${LOCK_HASH}" >> $GITHUB_OUTPUT
          echo "DOCKERFILE_HASH=${DOCKERFILE_HASH}" >> $GITHUB_OUTPUT
          echo "PHP_IMAGE=${PHP_IMAGE}" >> $GITHUB_OUTPUT
          echo "PHP_TAG=${PHP_TAG}" >> $GITHUB_OUTPUT
          echo "IMAGE=${IMAGE}" >> $GITHUB_OUTPUT
          echo "TAR=${TAR}" >> $GITHUB_OUTPUT
          echo "KEY=${KEY}" >> $GITHUB_OUTPUT

      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.image-tag.outputs.CACHE_PATH }}
          key: ${{ steps.image-tag.outputs.KEY }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          make build-ci
          mkdir -p ${{ steps.image-tag.outputs.CACHE_PATH }}
          docker save ${{ steps.image-tag.outputs.IMAGE }} > ${{ steps.image-tag.outputs.TAR }}
